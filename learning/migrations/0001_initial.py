# Generated by Django 5.1.5 on 2025-02-21 16:22

import django.db.models.deletion
import django.utils.timezone
import learning.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('editor', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subdot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.subdot')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('selected_answer', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField()),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='learning.assessment')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=learning.models.user_profile_path)),
                ('learning_style', models.CharField(choices=[('visual', 'Visual'), ('auditory', 'Auditory'), ('reading', 'Reading/Writing'), ('kinesthetic', 'Kinesthetic')], default='visual', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('progress_reminders', models.BooleanField(default=True)),
                ('public_profile', models.BooleanField(default=False)),
                ('show_progress', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstructorQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answered_at', models.DateTimeField(blank=True, null=True)),
                ('subdot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.subdot')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learnerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('total_marks', models.IntegerField(default=10)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.assessment')),
                ('subdot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.subdot')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learnerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='NewNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.topic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='learning.learnerprofile')),
                ('subdot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.subdot')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DotProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_subdots_completed', models.IntegerField(default=0)),
                ('dot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.dot')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learnerprofile')),
            ],
            options={
                'unique_together': {('learner', 'dot')},
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subdot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.subdot')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learnerprofile')),
            ],
            options={
                'unique_together': {('learner', 'subdot')},
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.DurationField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(default=0)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learnerprofile')),
                ('subdot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='editor.subdot')),
            ],
            options={
                'unique_together': {('learner', 'subdot')},
            },
        ),
    ]
